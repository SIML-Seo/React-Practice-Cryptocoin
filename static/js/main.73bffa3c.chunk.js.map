{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","routes/Price.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","Chart","coinId","useOutletContext","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","x","time_open","y","open","high","low","close","options","theme","mode","chart","height","title","text","align","xaxis","yaxis","show","tooltip","enabled","Container","styled","div","Header","header","Title","h1","props","accentColor","Loader","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","name","rank","symbol","quotes","USD","description","total_supply","max_supply","to","context","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Price","Router","basename","process","path","element","GlobalStyled","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.73bffa3c.chunk.js","sourcesContent":["import { json } from \"stream/consumers\";\r\n\r\nconst BASE_URL = \"https://api.coinpaprika.com/v1\";\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((res) => res.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string){\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((res) => res.json());\r\n}","import { useQuery } from \"react-query\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface ChartProps{\r\n    coinId: string;\r\n}\r\n\r\ninterface IHistorical{\r\n    time_open: string; \r\n    time_close: string; \r\n    open: number;\r\n    high: number;\r\n    low: number;\r\n    close: number;\r\n    volume: number;\r\n    market_cap: number;\r\n}\r\n\r\nfunction Chart() {\r\n    const {coinId} = useOutletContext<ChartProps>();\r\n    const {isLoading, data} = useQuery<IHistorical[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {refetchInterval: 10000,});\r\n    return (\r\n        <div>\r\n            {isLoading ? \r\n                \"Loading Chart...\" :\r\n                <ApexChart \r\n                    type=\"candlestick\"\r\n                    series={[\r\n                        {\r\n                            data: data?.map(price => ({x: new Date(price.time_open), y: [price.open, price.high, price.low, price.close]}))\r\n                        }\r\n                        // {\r\n                        //     name: \"Price\",\r\n                        //     data: data?.map(price => price.close)\r\n                        // }\r\n                    ]}\r\n                    options={{ \r\n                        // chart: {height: 500, width: 500, toolbar: {show: false}, background: \"transparent\"},\r\n                        // grid: {show: false},\r\n                        theme: {mode: \"dark\"},\r\n                        // stroke: {curve: \"smooth\", width: 3 ,},\r\n                        // xaxis: {labels: {show:false}, axisTicks: {show: false}, axisBorder: {show: false}, categories: data?.map((price) => price.time_close), type: \"datetime\"},\r\n                        // yaxis: {show: false},\r\n                        // fill: {type: \"gradient\", gradient:{gradientToColors: [\"#0be881\"], stops: [0, 100]}},\r\n                        // colors: [\"#0fbcf9\"],\r\n                        // tooltip: {y: {formatter: (value) => `$ ${value.toFixed(3)}`}},\r\n                        chart: {height: 500, type:\"candlestick\"},\r\n                        title: {text: \"CandleStick Chart\", align: \"left\"},\r\n                        xaxis: {type: \"datetime\"},\r\n                        yaxis: {show: false, tooltip: {enabled: true}},\r\n                    }}\r\n                />\r\n            }\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Chart;","import { useEffect, useState } from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation, useParams, Outlet, useMatch } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\n\r\nconst Container = styled.div`\r\npadding: 0px 20px;\r\nmax-width: 480px;\r\nmargin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\nheight: 10vh;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\nconst Title = styled.h1`\r\nfont-size: 48px;\r\ncolor: ${props => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\ntext-align: center;\r\ndisplay: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background-color: rgba(0,0,0,0.5);\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst OverviewItem = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    \r\n    span:first-child{\r\n        font-size: 10px;\r\n        font-weight: 400;\r\n        text-transform: uppercase;\r\n        margin-bottom: 5px;\r\n    }\r\n`\r\nconst Description = styled.p`\r\n    margin: 20px 0px;\r\n`\r\n\r\nconst Tabs = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    margin: 25px 0px;\r\n    gap: 10px;\r\n`\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    background-color: rgba(0,0,0,0.5);\r\n    padding: 7px 0px;\r\n    border-radius: 10px;\r\n    color: ${props => props.isActive ?\r\n        props.theme.accentColor : props.theme.textColor};\r\n    a {\r\n        display: block;\r\n    }\r\n`\r\n\r\ninterface RouterState {\r\n    name: string;\r\n}\r\n\r\n\r\ninterface InfoData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    description: string;\r\n    message: string;\r\n    open_source: boolean;\r\n    started_at: string;\r\n    development_status: string;\r\n    hardware_wallet: boolean;\r\n    proof_type: string;\r\n    org_structure: string;\r\n    hash_algorithm: string;\r\n    first_data_at: string;\r\n    last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n        USD: {\r\n            ath_date: string;\r\n            ath_price: number;\r\n            market_cap: number;\r\n            market_cap_change_24h: number;\r\n            percent_change_1h: number;\r\n            percent_change_1y: number;\r\n            percent_change_6h: number;\r\n            percent_change_7d: number;\r\n            percent_change_12h: number;\r\n            percent_change_15m: number;\r\n            percent_change_24h: number;\r\n            percent_change_30d: number;\r\n            percent_change_30m: number;\r\n            percent_from_price_ath: number;\r\n            price: number;\r\n            volume_24h: number;\r\n            volume_24h_change_24h: number;\r\n        }\r\n    };\r\n}\r\n\r\nfunction Coin() {\r\n    const { coinId } = useParams();\r\n    const location = useLocation();\r\n    const state = location.state as RouterState;\r\n    const priceMatch = useMatch(\"/:coinId/price\");\r\n    const chartMatch = useMatch(\"/:coinId/chart\");\r\n    const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId!),{refetchInterval: 10000,});\r\n    const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId!),{refetchInterval: 5000,});\r\n    /*  const [loading, setLoading] = useState(true);\r\n     const [info, setInfo] = useState<InfoData>();\r\n     const [priceInfo, setPriceInfo] = useState<PriceData>();\r\n     useEffect(() => {\r\n         (async () => {\r\n             const infoData = await (await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)).json();\r\n             const priceData = await (await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)).json();\r\n             setInfo(infoData);\r\n             setPriceInfo(priceData);\r\n             setLoading(false);\r\n         })();\r\n     }, [coinId]) */\r\n    const loading = infoLoading || tickersLoading;\r\n    return (\r\n        <Container>\r\n            <Helmet>\r\n                <title>\r\n                    {state?.name ? state.name : loading ? \"Loading..\" : infoData?.name}\r\n                </title>\r\n            </Helmet>\r\n            <Header>\r\n                <Title>\r\n                    {state?.name ? state.name : loading ? \"Loading..\" : infoData?.name}\r\n                </Title>\r\n            </Header>\r\n            {loading ? (\r\n                <Loader>loading...</Loader>\r\n            ) : (\r\n                <>\r\n                    <Overview>\r\n                        <OverviewItem>\r\n                            <span>Rank:</span>\r\n                            <span>{infoData?.rank}</span>\r\n                        </OverviewItem>\r\n                        <OverviewItem>\r\n                            <span>Symbol:</span>\r\n                            <span>{infoData?.symbol}</span>\r\n                        </OverviewItem>\r\n                        <OverviewItem>\r\n                            <span>Price:</span>\r\n                            <span>{tickersData?.quotes.USD.price}</span>\r\n                        </OverviewItem>\r\n                    </Overview>\r\n                    <Description>{infoData?.description}</Description>\r\n                    <Overview>\r\n                        <OverviewItem>\r\n                            <span>Total Supply:</span>\r\n                            <span>{tickersData?.total_supply}</span>\r\n                        </OverviewItem>\r\n                        <OverviewItem>\r\n                            <span>Max Supply:</span>\r\n                            <span>{tickersData?.max_supply}</span>\r\n                        </OverviewItem>\r\n                    </Overview>\r\n                    <Tabs>\r\n                        <Tab isActive={chartMatch !== null}>\r\n                            <Link to={`/${coinId}/chart`}>Chart</Link>\r\n                        </Tab>\r\n                        <Tab isActive={priceMatch !== null}>\r\n                            <Link to={`/${coinId}/price`}>Price</Link>\r\n                        </Tab>\r\n                    </Tabs>\r\n                    <Outlet context={{coinId}}/>\r\n                </>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Coin;","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 10vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul`\r\n\r\n`;\r\n\r\nconst Coin = styled.li`\r\n    background-color: white;\r\n    color: ${(props) => props.theme.bgColor};\r\n    margin-bottom: 15px;\r\n    border-radius: 15px;\r\n    a{\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 20px;  \r\n        transition: color 0.2s ease-in;\r\n    }\r\n    &:hover{\r\n        a{\r\n            color:${props => props.theme.accentColor}\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 48px;\r\n    color: ${props => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n    text-align: center;\r\n    display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width: 35px;\r\n    height: 35px;\r\n    margin-right: 10px;\r\n`\r\n\r\ninterface ICoin {\r\n    id: string,\r\n    name: string,\r\n    symbol: string,\r\n    rank: number,\r\n    is_new: boolean,\r\n    is_active: boolean,\r\n    type: string,\r\n}\r\n\r\nfunction Coins() {\r\n    const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n    /* const [coins, setCoins] = useState<CoinInterface[]>([])\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => { \r\n        (async() => {\r\n            const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\r\n            const json = await response.json();\r\n            setCoins(json.slice(0, 100));\r\n            setLoading(false);\r\n        })();\r\n    }, []) */\r\n    return (\r\n        <Container>\r\n            <Helmet>\r\n                <title>코인</title>\r\n            </Helmet>\r\n            <Header>\r\n                <Title>코인</Title>\r\n            </Header>\r\n            {isLoading ? (\r\n                <Loader>loading...</Loader>\r\n            ) : (<CoinsList>\r\n                {data?.slice(0, 100).map(coin =>\r\n                    <Coin key={coin.id}>\r\n                        <Link\r\n                            to={{\r\n                                pathname: `/${coin.id}`,\r\n                            }}\r\n                            state={{\r\n                                name: coin.name\r\n                            }}>\r\n                            <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\r\n                            {coin.name} &rarr;\r\n                        </Link>\r\n                    </Coin>\r\n                )}\r\n            </CoinsList>)}\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Coins;","function Price() {\r\n    return <h1>Price</h1>\r\n}\r\n\r\nexport default Price;","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport Chart from \"./routes/Chart\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Price from \"./routes/Price\";\r\n\r\nfunction Router() {\r\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Routes>\r\n            <Route path=\"/\" element={<Coins />} />\r\n            <Route path=\"/:coinId\" element={<Coin />}>\r\n                <Route path=\"chart\" element={<Chart />} />\r\n                <Route path=\"price\" element={<Price />} />\r\n            </Route>\r\n        </Routes>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default Router;","import React, { useState } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\"\n\n\nconst GlobalStyled = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  *{\n    box-sizing: border-box;\n  }\n  body{\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.textColor};\n  }\n  a{\n    text-decoration: none;\n    color:inherit;\n  }\n`\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyled />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ThemeProvider } from 'styled-components';\nimport App from './App';\nimport { theme } from './theme';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme:DefaultTheme = {\r\n    bgColor: \"#2f3640\",\r\n    textColor: \"#f5f6fa\",\r\n    accentColor: \"#44bd32\"\r\n}\r\n"],"sourceRoot":""}